#!/bin/bash

# Reformats our documentation into geminidoc

HAIKU_SOURCES=$HOME/Code/haiku
HAIKU_WEBSITE=$HOME/Code/website

cd content
for i in develop user api; do
	WORKPATH=$HAIKU_SOURCES/docs/$i
	echo "Scanning $WORKPATH..."
	if [ -f "$WORKPATH/Doxyfile" ]; then
		# XXX: Working.. but looks horrible
		echo "Detected Doxygen at $WORKPATH"
		## Install moxygen (doxygen to markdown)
		#npm install -g --prefix $HOME/.node moxygen
		#cd $WORKPATH
		#( cat Doxyfile ; \
		#	echo "GENERATE_HTML=NO" ; \
		#	echo "GENERATE_XML=YES" ; \
		#	echo "OUTPUT_DIRECTORY=output" ) | doxygen -
		#cd - && rm -rf $i && mkdir -p $i && cd $i
		#echo "Doxygen to markdown..."
		#$HOME/.node/bin/moxygen -g $WORKPATH/output/xml/
		#echo "Markdown to gemini..."
		#for i in *.md*; do echo "Processing $i..."; md2gmn -f "$i" > "$i.gmi"; rm -f "$i"; done
	elif [ -f "$WORKPATH/conf.py" ]; then
		# XXX: Working, looks okish with errors
		echo "Detected Sphinx at $WORKPATH"
		pip install --upgrade --break-system-packages sphinx_gemini_builder
		echo "Cleaning up old docs..."
		rm -rf docs/$i
		cd $WORKPATH
		make gemini
		cd -
		mkdir -p docs/$i
		mv $WORKPATH/generated/gemini/* docs/$i
	fi
done

# And now the blog articles
rm -rf docs/blog
mkdir -p docs/blog

for i in $(find $HAIKU_WEBSITE/content/blog -name "*.md" -not -name "_index.md"); do
	AUTHOR=$(basename $(dirname $i))
	BASE=$(basename -s.md $i)
	echo "building docs/blog/$AUTHOR/$BASE.gmi..."
	mkdir -p "docs/blog/$AUTHOR"
	md2gmi -i $i > docs/blog/$AUTHOR/$BASE.gmi
done

echo "# Blog Articles" > docs/blog/index.gmi

echo "Automatically collected from the Haiku hypertext website." >> docs/blog/index.gmi

for a in $(find docs/blog/ -maxdepth 1); do
	if [[ $a == "docs/blog/" ]]; then
		continue;
	fi
	AUTHOR=$(basename $a)
	echo "## $AUTHOR" >> docs/blog/index.gmi
	for i in $(find $a -name "*.gmi"); do
		echo "indexing $i..."
		GMIDOC=$(basename $i)
		echo "=> $AUTHOR/$GMIDOC" >> docs/blog/index.gmi
	done
done
